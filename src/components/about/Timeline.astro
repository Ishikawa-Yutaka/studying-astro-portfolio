---
type Props = {date: string, title: string}
const { date, title } = Astro.props;
---

<div class="timeline">
    <div class="timeline-item">
        <div class="timeline-date">{date}</div>
        <div class="timeline-content">
            <h4>{title}</h4>
           <slot />
        </div>
    </div>
</div>

<style>
    .timeline {
        position: relative;
        padding-left: 2rem;
    }

    .timeline::before{
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 2px;
        height: 100%;
        background-color: var(--primary-color);
    }
    
    .timeline-item {
        padding-bottom: 1.5rem;
        position: relative;
    }

    .timeline-item::before{
        content: '';
        position: absolute;
        top: 0.5;
        left: -2.35rem;
        width: 0.8rem;
        height: 0.8rem;
        background-color: var(--secondary-color);
        border-radius: 50%;
    }

    .timeline-date{
        font-weight: bold;
        margin-bottom: 0.5rem;
        color: var(--secondary-color);
    }

    .timeline-content{
        padding-left: 2rem;
    }

    h4{
		font-size: 1.4em;
        margin-bottom: 0.5rem;
	}

    @media (max-width: 720px) {
        .timeline{
            padding-left: 1.5rem;
        }

        .timeline-item::before{
            left: -1.85rem;
        }

    /* フェイドインアニメーション */
    .timeline-item{
        position: relative;
        opacity: 0;
        transform: translateY(40px);
        transition: opacity 0.7s ease-out,transform 0.7s ease-out;
    }

    .timeline-item.fade-in{
        opacity: 1;
        transform: translateY(0);
    }

}
    </style>

<style is:global>
    .timeline-content p{
        margin-bottom: 1rem;
    }

    .timeline-content ul{
        margin-left: 1.5rem;
        list-style-type: disc;
        padding: 0;
    }

</style>

<script>
    window.addEventListener('DOMContentLoaded', () => {
        //as NodeListOf<HTMLElement>で型を指定（typescript）
        const timelineItems = document.querySelectorAll('.timeline-item') as NodeListOf<HTMLElement>

        const observer = new IntersectionObserver((entries) => {
            entries.forEach((entry) => {
                if(entry.isIntersecting){
                    entry.target.classList.add('fade-in');
                }
            });
            { threshold: 0.5 }
        });

        timelineItems.forEach((item) => {
            observer.observe(item);
        });
    });
</script>